# -*- coding: utf-8 -*-
"""Hourly Earning Assignment 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Lz7ztnvGb6enKPiNec07EXh5DcPv09It
"""

#pip install streamlit

#pip install streamlit

import streamlit as st
import pandas as pd
import plotly.express as px

# Load dataset
df = pd.read_csv('Hourly Earning.csv')

# Set page title and subtitle
st.title("Hourly Earning Visualization Assignment 2")
st.markdown("*Prepared by Layan Bekai*")
st.markdown("---\n\n")

# Visualization 1: Bar Chart
st.header("Earnings by Year (Slider)")

# Create a slider to select the year
selected_year = st.slider("Select a year:", min_value=2013, max_value=2020, value=2018, step=1)

# Filter data for the selected year
filtered_data = df[df['year'] == selected_year]

# Create a bar chart
fig = px.bar(filtered_data, x='country', y='amount', color='gender',
             title=f'Earnings in {selected_year}', labels={'amount': 'Hourly Earnings'})

st.plotly_chart(fig)
st.markdown("---\n\n")

# Visualization 2: Map (New Style)
st.header("Earnings Map")

# Create a map using Plotly Express with a different style
fig_map = px.scatter_geo(
    df,
    lat='lat',
    lon='lon',
    color='amount',
    hover_name='country',
    projection='natural earth',
    title='Earnings by Country',
    color_continuous_scale='Viridis',  # Change the color scale
)

st.plotly_chart(fig_map)
st.markdown("---\n\n")

# Visualization 4: Scatter Plot with Slider for United States
st.header("Scatter Plot (Earnings vs. Year) for United States")

# Create a slider to select the year range
min_year_us = df[df['country'] == 'United States']['year'].min()
max_year_us = df[df['country'] == 'United States']['year'].max()
selected_min_year_us, selected_max_year_us = st.slider(
    "Select a year range for United States:",
    min_value=min_year_us,
    max_value=max_year_us,
    value=(min_year_us, max_year_us),
    step=1
)

# Filter data for the selected year range and United States
filtered_scatter_data_us = df[(df['year'] >= selected_min_year_us) &
                               (df['year'] <= selected_max_year_us) &
                               (df['country'] == 'United States')]

# Create a scatter plot using Plotly Express
fig_scatter_slider_us = px.scatter(
    filtered_scatter_data_us,
    x='year',
    y='amount',
    color='gender',
    title=f'Earnings vs. Year for United States ({selected_min_year_us} - {selected_max_year_us})',
    labels={'amount': 'Hourly Earnings'},
    hover_name='country',  # Display country name on hover
)

st.plotly_chart(fig_scatter_slider_us)

st.markdown("---\n\n")

# Table with Checkbox Filter
st.header("Earnings Table (Filter by Gender)")

# Create a checkbox filter for gender
selected_gender = st.checkbox("Filter by Gender")

if selected_gender:
    # Show the table filtered by gender
    gender = st.selectbox("Select Gender:", df['gender'].unique())
    filtered_table_data = df[df['gender'] == gender]
else:
    # Show the full table
    filtered_table_data = df

# Display the filtered table
st.write(filtered_table_data)

pip freeze > requirements.txt

from google.colab import files

# Specify the file name you want to download (in this case, requirements.txt)
file_name = 'requirements.txt'

# Download the file
files.download(file_name)

